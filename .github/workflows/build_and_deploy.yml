name: Build & deploy to gh-pages

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  linux_build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
      with:
        lfs: true
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Build linux # running 'cmake .' twice fixes tests being built
      run: |
        git submodule update --init --recursive
        sudo apt-get update
        sudo apt-get install xorg-dev -y
        sudo apt-get install freeglut3-dev -y
        cd desktop
        cmake . -DCMAKE_BUILD_TYPE=Release
        cmake . -DCMAKE_BUILD_TYPE=Release
        make -j8
        cd out
        mkdir assets
        cp -a ../../assets/. assets/
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: linux_build
        path: desktop/out
        
  windows_build:
    
    runs-on: windows-latest    
    steps:
    - uses: actions/checkout@v1
      with:
        lfs: true
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: seanmiddleditch/gha-setup-vsdevenv@master
    - name: Build windows
      run: |
        git submodule update --init --recursive
        cd desktop
        cmake .
        cmake .
        cmake --build . -j8 --config Release
        cd out/Release/
        rm game.exp game.lib
        mkdir assets
        cp -a ../../../assets/. assets/
        cp ../../bin/dibidab-engine/bin/gu/bin/openal/Release/OpenAL32.dll .
      shell: bash
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: windows_build
        path: desktop/out/Release

  html_build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      with:
        lfs: true
    - name: Setup emsdk
      uses: mymindstorm/setup-emsdk@v7
      with:
        # Make sure to set a version number!
        version: 1.38.47
        # This is the name of the cache folder.
        # The cache folder will be placed in the build directory,
        #  so make sure it doesn't conflict with anything!
        actions-cache-folder: 'emsdk-cache'
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Build html
      run: |
        git submodule update --init --recursive
        cd html
        emconfigure cmake .
        emconfigure cmake .
        make -j8
    - name: Upload Artifacts # The project is then uploaded as an artifact named 'site'.
      uses: actions/upload-artifact@v1
      with:
        name: site
        path: html/out

  deploy:

    needs: [html_build, linux_build, windows_build]

    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Download HTML build
      uses: actions/download-artifact@v1
      with:
        name: site
        
    - name: Download Linux build
      uses: actions/download-artifact@v1
      with:
        name: linux_build

    - name: Download Windows build
      uses: actions/download-artifact@v1
      with:
        name: windows_build

    - name: Zip builds
      run: |
        cd linux_build
        zip -r ../site/game-linux.zip ./*
        cd ../windows_build
        zip -r ../site/game-windows.zip ./*

    - name: Deploy to GH-pages
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BRANCH: gh-pages
        SINGLE_COMMIT: true
        FOLDER: 'site' # The deployment folder should match the name of the artifact. Even though our project builds into the 'build' folder the artifact name of 'site' must be placed here.
